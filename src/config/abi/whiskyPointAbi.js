export const whiskyPointAbi = [
  { inputs: [], name: 'Already_Enroll', type: 'error' },
  { inputs: [], name: 'Invalid_Cond', type: 'error' },
  { inputs: [], name: 'Invalid_Fee', type: 'error' },
  { inputs: [], name: 'Invalid_Nft_Owner', type: 'error' },
  { inputs: [], name: 'Invalid_Points', type: 'error' },
  { inputs: [], name: 'Invalid_Referral', type: 'error' },
  { inputs: [], name: 'Not_Enroll', type: 'error' },
  { inputs: [], name: 'Only_Member', type: 'error' },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint8', name: 'version', type: 'uint8' }],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'account', type: 'address' }],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'account', type: 'address' }],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [],
    name: 'USDC',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'WhiskyMarket',
    outputs: [{ internalType: 'contract IWhiskyMarket', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'WhiskyNft',
    outputs: [{ internalType: 'contract IERC721', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'collectLoyaltyToken', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  { inputs: [], name: 'collectPoint', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [{ internalType: 'uint256[]', name: 'storageIds', type: 'uint256[]' }],
    name: 'collectStoredNft',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentStorageNft',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'nftAddress', type: 'address' },
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
    ],
    name: 'enrollLoyalty',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: 'memberShip', type: 'uint8' },
      { internalType: 'address', name: 'referral', type: 'address' },
    ],
    name: 'enrollMemberShip',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'getLoyaltyDetails',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'nftAddress', type: 'address' },
          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
          { internalType: 'uint256', name: 'loyaltyEpoch', type: 'uint256' },
          { internalType: 'bool', name: 'status', type: 'bool' },
        ],
        internalType: 'struct WhiskyPoint.LoyaltyData',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'fee', type: 'uint256' }],
    name: 'getPlatformFees',
    outputs: [
      {
        components: [
          { internalType: 'uint64', name: 'accessFee', type: 'uint64' },
          { internalType: 'uint64', name: 'transactionFee', type: 'uint64' },
          { internalType: 'uint64', name: 'referralFee', type: 'uint64' },
          { internalType: 'uint64', name: 'storageFee', type: 'uint64' },
          { internalType: 'uint64', name: 'storageEpoch', type: 'uint64' },
        ],
        internalType: 'struct WhiskyPoint.FeeStore',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'getReferralFeeDetails',
    outputs: [
      { internalType: 'address', name: 'referral', type: 'address' },
      { internalType: 'uint64', name: 'fee', type: 'uint64' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'storageId', type: 'uint256' }],
    name: 'getStorageDetails',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'nftAddress', type: 'address' },
          { internalType: 'address', name: 'account', type: 'address' },
          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
          { internalType: 'uint256', name: 'storageEpoch', type: 'uint256' },
          { internalType: 'bool', name: 'isCollected', type: 'bool' },
        ],
        internalType: 'struct WhiskyPoint.NftStorage',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'getTransactionFeeByUser',
    outputs: [{ internalType: 'uint256', name: 'transactionFee', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'getUserInfo',
    outputs: [
      {
        components: [
          { internalType: 'uint8', name: 'memberShip', type: 'uint8' },
          { internalType: 'uint64', name: 'holdingPoint', type: 'uint64' },
          { internalType: 'uint64', name: 'memberShipEpoch', type: 'uint64' },
          { internalType: 'uint64', name: 'storageEpoch', type: 'uint64' },
          { internalType: 'address', name: 'referredBy', type: 'address' },
          { internalType: 'bool', name: 'referralStatus', type: 'bool' },
        ],
        internalType: 'struct WhiskyPoint.UserData',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'getUserMembership',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'wallet', type: 'address' }],
    name: 'getUserTransactionFee',
    outputs: [
      { internalType: 'uint256', name: 'fee', type: 'uint256' },
      { internalType: 'bool', name: 'isEnroll', type: 'bool' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getWhiskyTreasury',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '_treasury', type: 'address' },
      { internalType: 'address', name: '_initialReferral', type: 'address' },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'isWhiskyAdmin',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'loyaltyHoldingDuration',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'loyaltyHoldingPoint',
    outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'memberShipPay', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [
      { internalType: 'address', name: 'nftAddress', type: 'address' },
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
    ],
    name: 'nftStore',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'uint256', name: '', type: 'uint256' },
      { internalType: 'bytes', name: '', type: 'bytes' },
    ],
    name: 'onERC721Received',
    outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { inputs: [], name: 'pause', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [],
    name: 'paused',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'newLoyaltyHoldingDuration', type: 'uint256' }],
    name: 'setLoyaltyHoldingDuration',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint64', name: 'newLoyaltyHoldingPoint', type: 'uint64' }],
    name: 'setLoyaltyHoldingPoint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: 'memberShip', type: 'uint8' },
      {
        components: [
          { internalType: 'uint64', name: 'accessFee', type: 'uint64' },
          { internalType: 'uint64', name: 'transactionFee', type: 'uint64' },
          { internalType: 'uint64', name: 'referralFee', type: 'uint64' },
          { internalType: 'uint64', name: 'storageFee', type: 'uint64' },
          { internalType: 'uint64', name: 'storageEpoch', type: 'uint64' },
        ],
        internalType: 'struct WhiskyPoint.FeeStore',
        name: 'fee',
        type: 'tuple',
      },
    ],
    name: 'setPlatformFees',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'setReferralStatus',
    outputs: [
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'uint64', name: '', type: 'uint64' },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'address', name: 'wallet', type: 'address' },
          { internalType: 'uint64', name: 'points', type: 'uint64' },
        ],
        internalType: 'struct WhiskyPoint.UserPoints[]',
        name: 'userPoints',
        type: 'tuple[]',
      },
      { internalType: 'bool', name: 'isCrease', type: 'bool' },
    ],
    name: 'setUserPointsByAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newWhiskyMarket', type: 'address' }],
    name: 'setWhiskyMarket',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newWhiskyNft', type: 'address' }],
    name: 'setWhiskyNft',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'storageId', type: 'uint256' }],
    name: 'storagePay',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { inputs: [], name: 'unpause', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [
      { internalType: 'address', name: 'account', type: 'address' },
      { internalType: 'uint256', name: 'storageId', type: 'uint256' },
    ],
    name: 'userStoredContains',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'userStoredToken',
    outputs: [{ internalType: 'uint256[]', name: '', type: 'uint256[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'account', type: 'address' },
      { internalType: 'uint256', name: 'index', type: 'uint256' },
    ],
    name: 'userStoredTokenByIndex',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'userStoredTokenlength',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
];
